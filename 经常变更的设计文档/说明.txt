页面与netservice沟通的方法

activity页面中：

1.在protected void onCreate中注册接受命令的广播

1)MyReceiver receiver;
		receiver = new MyReceiver(); // 注册广播
		IntentFilter filter = new IntentFilter();
		filter.addAction("android.intent.action.MainActivity"); //此处改成自己activity的名字
		registerReceiver(receiver, filter);


2)只有在主线程中才可以更改控件值，所以用handler接收广播得到的数据。
		mHandler = new Handler() {
			public void handleMessage(android.os.Message msg) {
				String str = msg.obj.toString();
				Toast.makeText(getApplicationContext(), "handle"+str, Toast.LENGTH_SHORT)
						.show();	
				String substr = str.substring(0, 2);
//				int mm = substr.length();
				if (substr.equals("01")) { // 连接成功
					setAll(true);
				}
				else if (substr.equals("00")) { // 登陆成功
					setAll(true);
					LoginOK();
				}
			};
		};


2.

	private class MyReceiver extends BroadcastReceiver { // 接收service传来的信息
		@Override
		public void onReceive(Context context, Intent intent) {
			// TODO Auto-generated method stub
			if (intent.getAction().equals("android.intent.action.MainActivity")) {
				Bundle bundle = intent.getExtras();
				String str = bundle.getString("str");
//				if (str.equals("00")) {
					// stateflag = 1 ;
					Message msg = new Message();
					msg.obj = str;
					mHandler.sendMessage(msg);
//				}

			}
		}
	}


3.发送比较简单，直接调用即可，不用做任何更改
	public void sent(String bs) { // 通过Service发送数据
		Intent intent = new Intent();// 创建Intent对象
		intent.setAction("android.intent.action.cmd");
		intent.putExtra("value", bs);
		sendBroadcast(intent);// 发送广播
	}
